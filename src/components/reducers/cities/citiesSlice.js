import { createSlice, createAsyncThunk } from "@reduxjs/toolkit";
import { fetchCitiesAPI } from "./citiesAPI";

const initialState = {
  items: [],
  fetching: false,
  filter: ""
};

// Thunks

export const fetchCities = createAsyncThunk("cities/fetchCities", async () => {
  const response = await fetchCitiesAPI();
  return response;
});

// Slice

export const citiesSlice = createSlice({
  name: "cities",
  initialState,
  reducers: {
    filterCities: (state, action) => {
      state.filter = action.payload;
    },
  },
  extraReducers: (builder) => {
    builder
      .addCase(fetchCities.pending, (state) => {
        state.fetching = true;
      })
      .addCase(fetchCities.fulfilled, (state, action) => {
        state.fetching = false;
        state.items = action.payload;
      });
  },
});

// These 'actions' have been automatically generated by createSlice
export const { filterCities } = citiesSlice.actions;

export default citiesSlice.reducer;
